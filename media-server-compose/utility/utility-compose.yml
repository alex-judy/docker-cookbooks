version: "3.7"
services:

########## Docker Utilities ##########

## Ouroboros
  # https://hub.docker.com/r/pyouroboros/ouroboros/
  # https://github.com/pyouroboros/ouroboros/wiki
  ouroboros:
    container_name: ouroboros
    image: pyouroboros/ouroboros:latest
    restart: always
    networks:
      - traefik_proxy
      - socket_proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock:ro # Connect to docker-socket-proxy tcp://docker-socket-proxy:2375
      - $DOCKERDIR/configs/ouroboros:/root/.docker/config.json:ro
    environment:
      - TZ=$TZ
      - CLEANUP=true
      - CRON="0 4 * * *"
      - LATEST=false
      - RUN_ONCE=false # Default false
      - LOG_LEVEL=info
      - SELF_UPDATE=true
      - NOTIFIERS=$DISCORD_NOTIFY # Discord Webhook URL
      - DOCKER_SOCKETS=tcp://socket-proxy:2375

## Docker Garbage Collector
  ## Create excludes file:
    # mkdir -p $USERDIR/docker/dockergc
    # cd $!
    # wget https://raw.githubusercontent.com/clockworksoul/docker-gc-cron/master/compose/docker-gc-exclude

  dockergc:
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    restart: unless-stopped
    networks:
      - socket_proxy
    depends_on:
      - socket-proxy
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/configs/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
    environment:
      CRON: 0 0 0 * * ? # Everyday at midnight. Previously 0 0 * * *
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ
      DOCKER_HOST: tcp://socket-proxy:2375

## Who Am I?? - Show Headers
  whoami:
    container_name: whoami
    image: containous/whoami:v1.3.0
    restart: always
    networks:
      - traefik_proxy
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.whoami-rtr.entrypoints=https"
      - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.whoami-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"

networks:
  traefik_proxy:
    external: true
  socket_proxy:
    external: true